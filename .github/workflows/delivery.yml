name: delivery

on:
  push:
    branches: [ "main" ]

jobs:
  delivery:
    runs-on: [ ubuntu-latest ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: 'true'

    - name: Print head git commit message
      id: last-commit
      run: |
        echo "${{github.event.head_commit.message}}"
        echo "current_action=${${{github.event.head_commit.message}}%%:*}" >> "$GITHUB_OUTPUT"

    - name: print tags
      run: |
        echo "$(git for-each-ref --sort=-creatordate --format '%(refname)' refs/tags)"

    - name: print last tag
      id: last-tag
      run: |
        echo "$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)"
        echo "current_version=$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)" >> "$GITHUB_OUTPUT"

    - name: Tag features and fixes
      if: ${{ startsWith(github.event.head_commit.message, 'fix:') || startsWith(github.event.head_commit.message, 'feat:') }}
      env: 
        CURRENT_VERSION: ${{ steps.last-tag.outputs.current_version }}
        CURRENT_ACTION: ${{ github.event.last-commit.message }}
      run: |
        echo "it was a feature"
        echo "new_version=$(./versioning.sh  1)" >> "$GITHUB_OUTPUT"

    - name: Print if it is a fix
      if: ${{ contains(github.event.head_commit.message, 'fix:') }}
      run: |
        echo "it was a feature"
        echo "new_version=$(./versioning.sh ${{ steps.last-tag.outputs.current_version }} 2)" >> "$GITHUB_OUTPUT"

    # - name: Push Git Tag
    #   run: |
    #     git config user.name "GitHub Actions"
    #     git config user.email "github-actions@users.noreply.github.com"
    #     git tag ${{ steps.last-tag.outputs.current_version }}
    #     git push origin $NEW_TAG
