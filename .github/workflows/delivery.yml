name: delivery

on:
  push:
    branches: [ "main" ]

jobs:
  delivery:
    runs-on: [ ubuntu-latest ]
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: 'true'
        token: ${{ secrets.GIT_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "v21.6.2"

    - name: Install sematic release
      run: npm install --save-dev semantic-release@23.0.2

    # - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
    #   run: npm audit signatures

    - name: Print head git commit message
      id: last-commit
      env:
        CURRENT_MESSAGE: ${{  github.event.head_commit.message  }}
      run: |
        echo "${{github.event.head_commit.message}}"
        real_message=$(echo "$CURRENT_MESSAGE" | grep -E "^.*:")
        echo ${real_message%%:*}
        echo "current_action=${real_message%%:*}" >> "$GITHUB_OUTPUT"

    - name: Set flag to continue delivery
      id: new-delivery
      run: |
        echo ${{ startsWith(steps.last-commit.outputs.current_action, 'fix') || startsWith(steps.last-commit.outputs.current_action, 'feat') }}
        echo "ok=${{ startsWith(steps.last-commit.outputs.current_action, 'fix') || startsWith(steps.last-commit.outputs.current_action, 'feat') }}" >> "$GITHUB_OUTPUT"

    - name: print tags
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      run: |
        echo "$(git for-each-ref --sort=-creatordate --format '%(refname)' refs/tags)"

    - name: print last tag
      id: last-tag
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      run: |
        echo "$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)"
        echo "current_version=$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)" >> "$GITHUB_OUTPUT"

    - name: Release Dry Run
      id: get-next-version
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        npx semantic-release --dry-run --no-ci

    - name: Print New Version
      run: |
        echo "${{ steps.get-next-version.outputs.new-release-version }}"
  
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: npx semantic-release
  
    outputs:
      VERSION: 'v0.1.0'

  dev_deployment:
      name: Deploy on development
      needs: delivery
      uses: fernandoocampo/basic-micro/.github/workflows/deployment.yml@main
      with:
        TARGET: 'development'
        VERSION: ${{ needs.delivery.outputs.VERSION }}

  prod_deployment:
      name: Deploy on production
      needs: delivery
      uses: fernandoocampo/basic-micro/.github/workflows/deployment.yml@main
      with:
        TARGET: 'production'
        VERSION: ${{ needs.delivery.outputs.VERSION }}