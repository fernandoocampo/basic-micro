name: delivery

on:
  push:
    branches: [ "main" ]

jobs:
  delivery:
    runs-on: [ ubuntu-latest ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: 'true'

    - name: Print head git commit message
      id: last-commit
      env:
        CURRENT_MESSAGE: ${{  github.event.head_commit.message  }}
      run: |
        echo "${{github.event.head_commit.message}}"
        echo ${CURRENT_MESSAGE%%:*}
        echo "current_action=${CURRENT_MESSAGE%%:*}" >> "$GITHUB_OUTPUT"

    - name: print tags
      run: |
        echo "$(git for-each-ref --sort=-creatordate --format '%(refname)' refs/tags)"

    - name: print last tag
      id: last-tag
      run: |
        echo "$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)"
        echo "current_version=$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)" >> "$GITHUB_OUTPUT"

    - name: Tag features and fixes
      id: new-tag
      if: ${{ startsWith(github.event.head_commit.message, 'fix:') || startsWith(github.event.head_commit.message, 'feat:') }}
      env: 
        CURRENT_VERSION: ${{ steps.last-tag.outputs.current_version }}
        CURRENT_ACTION: ${{ steps.last-commit.outputs.current_action }}
      run: |
        echo "it was a $CURRENT_ACTION"
        echo "new_version=$(./versioning.sh)" >> "$GITHUB_OUTPUT"

    - name: Push Git Tag
      run: |
        echo "${{ steps.new-tag.outputs.new_version }}"
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag ${{ steps.new-tag.outputs.new_version }}
        git push origin ${{ steps.new-tag.outputs.new_version }}
