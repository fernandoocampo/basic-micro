name: delivery

on:
  push:
    branches: [ "main" ]

jobs:
  delivery:
    runs-on: [ ubuntu-latest ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: 'true'
        token: ${{ secrets.GIT_TOKEN }}

    - name: Print head git commit message
      id: last-commit
      env:
        CURRENT_MESSAGE: ${{  github.event.head_commit.message  }}
      run: |
        echo "${{github.event.head_commit.message}}"
        real_message=$(echo "$CURRENT_MESSAGE" | grep -E "^.*:")
        echo ${real_message%%:*}
        echo "current_action=${real_message%%:*}" >> "$GITHUB_OUTPUT"

    - name: Set flag to continue delivery
      id: new-delivery
      run: |
        echo ${{ startsWith(steps.last-commit.outputs.current_action, 'fix') || startsWith(steps.last-commit.outputs.current_action, 'feat') }}
        echo "ok=${{ startsWith(steps.last-commit.outputs.current_action, 'fix') || startsWith(steps.last-commit.outputs.current_action, 'feat') }}" >> "$GITHUB_OUTPUT"

    - name: print tags
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      run: |
        echo "$(git for-each-ref --sort=-creatordate --format '%(refname)' refs/tags)"

    - name: print last tag
      id: last-tag
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      run: |
        echo "$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)"
        echo "current_version=$(git describe --tags --abbrev=0 --match="v[0-9].[0-9].[0-9]*" HEAD)" >> "$GITHUB_OUTPUT"

    - name: Calculating version
      id: new-tag
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      env: 
        CURRENT_VERSION: ${{ steps.last-tag.outputs.current_version }}
        CURRENT_ACTION: ${{ steps.last-commit.outputs.current_action }}
      run: |
        echo "it was a $CURRENT_ACTION"
        chmod +x ./.github/scripts/versioning.sh
        echo "new_version=$(./.github/scripts/versioning.sh)" >> "$GITHUB_OUTPUT"

    - name: Push Git Tag
      if: ${{ steps.new-delivery.outputs.ok == 'true' }}
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        echo "${{ steps.new-tag.outputs.new_version }}"
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git config --global url."https://${GIT_TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
        git tag ${{ steps.new-tag.outputs.new_version }}
        git push origin ${{ steps.new-tag.outputs.new_version }}
  
    outputs:
      VERSION: ${{ steps.new-tag.outputs.new_version }}

  dev_deployment:
      name: Deploy on development
      needs: delivery
      uses: fernandoocampo/basic-micro/.github/workflows/deployment.yml@main
      with:
        TARGET: development
        VERSION: ${{ needs.delivery.outputs.VERSION }}

  prod_deployment:
      name: Deploy on production
      needs: delivery
      uses: fernandoocampo/basic-micro/.github/workflows/deployment.yml@main
      with:
        TARGET: production
        VERSION: ${{ needs.delivery.outputs.VERSION }}